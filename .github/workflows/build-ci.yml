# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
    CI: true

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x, 15.x, 16.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: update npm/yarn
      run: |
        npm install -g npm@latest
        npm install -g yarn@latest

    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - run: yarn global add synp@latest

    - name: bump version
      run: |
        node --version
        npm  --version
        yarn --version

#    - name : package-lock.json <=> yarn.lock
#      run: |
#        #synp --source-file package-lock.json
#        #synp --source-file yarn.lock
#        #rm -fv package-lock.json

    - name: yarn ci
      run: |
        rm -rf node_modules
        yarn install --frozen-lockfile --non-interactive
    - name: yarn autoclean
      run: |
        [ -f ".yarnclean" ] && yarn autoclean --init
        yarn autoclean --force
    - run: yarn check --verify-tree
    - run: yarn check --integrity
    - run: yarn outdated
    - run: yarn audit
    - name: yarn run build
      run: |
        yarn run build || true
    - name: yarn run lint
      run: |
         yarn run lint || true
    - run: yarn test
    - run: yarn licenses
    - run: yarn licenses list
    - run: yarn licenses generate-disclaimer
    - name: npm fund
      run: |
        synp --source-file yarn.lock
        npm fund

    - run: tree -a
